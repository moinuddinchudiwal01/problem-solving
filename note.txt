Problem 1: Sum of Natural Numbers
Write a JavaScript function that takes a number n as input and returns the sum of all natural numbers from 1 to n.
Ans: const sumOfInt = (n) => {
        let ans = 0;

        for(let i = 1;i<=n;i++){ 
        ans +=i; 
        }

        return ans;
    }

    console.log(sumOfInt(5));

Problem 2: Reverse a String
Write a JavaScript function that takes a string as input and returns the string reversed.
Ans: const reverseStr = (str) => {
        let reversed = "";
        
        for(let i = str.length-1;i>=0;i--){
            reversed +=str[i];
        }

        return reversed; 
    }

    console.log(reverseStr("hello"))

Problem 3: Check Prime Number
Write a JavaScript function that takes a number n and returns true if it’s a prime number, otherwise false.
Ans: const isPrime = (n) => {
    if(n<=1) return false;

    for(let i =2;i<n;i++){
        if(n % i === 0){
            return false;
        }
    }

        return true;
    }

    console.log(isPrime(5))
    console.log(isPrime(6))

Problem 4: Find the Largest Number in an Array
Write a JavaScript function that takes an array of numbers and returns the largest number in it.
Ans: const findMaxNum = (arr)=>{
        return Math.max(...arr);
    }
    console.log(findMaxNum([1,15,2,9,7,4]));
    
    const findMaxNum = (arr)=>{
    let max = arr[0];    
    
    for(let i =1;i<arr.length;i++){
        if(arr[i]>max) max = arr[i];
    }

        return max;
    }
    console.log(findMaxNum([1,15,2,9,77,4]));


Problem 5: Find the Second Largest Number in an Array
Write a JavaScript function that takes an array of numbers and returns the second largest number.
Ans: const findSecMaxNum = (arr)=>{
    if(arr.length < 2) return null;

    let max = -Infinity;    
    let secMax = -Infinity;

    for(let i =0;i<arr.length;i++){
        if(arr[i]>max){
            secMax = max;
            max = arr[i];
        }else if(arr[i]>secMax && arr[i] !== max){
            secMax = arr[i];
        }
    }

        return secMax ===  -Infinity?null:secMax;
        
    }
    console.log(findSecMaxNum([10, 5, 8, 20, 15]));


Problem 6: Remove Duplicates from an Array
Write a JavaScript function that takes an array and returns a new array without duplicates.
Ans: const removeDupli = (arr) => {
        return [...new Set(arr)]
    }

    console.log(removeDupli([1, 2, 2, 3, 4, 4, 5]))

    const removeDupli = (arr) => {
    let uniqueArr = [];

    for(let i =0;i<arr.length;i++){
        if(!uniqueArr.includes(arr[i])){
            uniqueArr.push(arr[i])
        }
    }

        return uniqueArr ;
    }

    console.log(removeDupli([1, 2, 2, 3, 4, 4, 5]))


Problem 7: Count Frequency of Each Element in an Array
Write a JavaScript function that takes an array and returns an object showing how many times each element appears.
Ans: const countFreq = (arr) => {
    let freq = {};

    for(item of arr){    
        if(freq[item]){
            freq[item] += 1;
        }else{
            freq[item] = 1;
        }
    }

        return freq;
    }

    console.log(countFreq([1, 2, 2, 3, 1, 4, 2]));


Problem 8: Check if a String is a Palindrome
A palindrome is a word, phrase, number, or sequence that reads the same forwards and backwards.
Ans: const isPalindrome = (str) => {
        return str.split('').reverse().join("") === str;
    }

    console.log(isPalindrome("ollo"));

    const isPalindrome = (str) => {
    let left = 0;
    let right = str.length - 1;

    while(left < right){
        if(str[left] !== str[right]){
            return false;
        }
        left++;
        right--;
    }

        return true;
    
    }

    console.log(isPalindrome("ollo"));


Problem 9: Find the Factorial of a Number
The factorial of a number n is the product of all positive integers less than or equal to n.
Ans: const factorialNum = (n) => {   
    let ans = 1;

    for(let i =1;i<=n;i++){
        ans *=i;
    }

        return ans;
    }

    console.log(factorialNum(5));

Problem 10 (Beginner-Friendly): Find the Smallest Number in an Array
Ans: const smallestNum = (arr) => {
    if(arr.length === 0)return undefined;

    let small = arr[0];

    for(let item of arr){
        if(item < small ){
            small = item;
        }
    }

        return small;
    }

    console.log(smallestNum([3, 7, 9, 4]));

Problem 11: Sum of All Numbers in an Array
Ans: const sumArray = (arr) => arr.reduce((acc,val)=> acc + val ,0)
     console.log(sumArray([1, 2, 3, 4, 5, 6]))

Problem 12: Write a function to count the number of vowels (a, e, i, o, u) in a given string.
Ans: const countVowels = (str) => {
    const vowels = ['a','e','i','o','u']
    let count = 0;

    for(item of str.toLowerCase()){
        if(vowels.includes(item)){
            count++;
        }
    }

    return count;
}

console.log(countVowels("javascript"));

Problem 13: Find the Minimum Number in an Array
Ans: const findMinNum = (arr) => {
    return Math.min(...arr)
}

console.log(findMinNum([5, 3, 9, 1, 7]))

const findMinNum = (arr) => {
    let min = arr[0];

    for(let i = 1;i<arr.length;i++){
        if(arr[i] <min) min = arr[i]
    }

    return min;
}

console.log(findMinNum([5, 3, 9, 1, 7]))

Problem 13: Count Occurrences of Each Number in an Array
Ans: const CountOccurrences = (arr) => {
    return arr.reduce((acc,val)=>{
        acc[val] = (acc[val]||0)+1
        return acc;
    },{})
}

console.log(CountOccurrences([1, 2, 2, 3, 1, 4, 2]));

Problem 14: Count Characters in a String
Ans: const CountCharacters = (str) =>{
   return str.split("").reduce((acc,val)=>{
    acc[val] = (acc[val]||0)+1;
    return acc;
   },{})
}

console.log(CountCharacters("hello"));

Problem 15: Check if Two Strings Are Anagrams
Ans: const anagrams = (str1,str2) => {
    if (str1.length !== str2.length) return false;

    let sortStr1 = str1.split("").sort();
    let sortStr2 = str2.split("").sort();
 
    return sortStr1.every((val,inx)=>val === sortStr2[inx]) ?true:false    

}

const anagrams = (str1,str2) => {
    if(str1.length !== str2.length) return false;

    let count1 = {};
    let count2 = {};

    for(let ch of str1) count1[ch] = (count1[ch]||0)+1;
    for(let ch of str2) count2[ch] = (count2[ch]||0)+1;
    
    for(let key in count1){
        if(count1[key] !== count2[key]) return false
    }

    return true;
}
console.log(anagrams("listen","silent"));

Problem 16: Remove Duplicates and Square the Numbers
Ans: const removeDuplAndSqr = (arr) =>{
    return [...new Set(arr)].map((item)=>item * item)
}

console.log(removeDuplAndSqr([1, 2, 2, 3]));


Problem 17: Find the Factorial of a Number
Ans: const getFactorial = (n) => {
    if (n === 0 || n === 1) {
        return 1;
    }

    return n * getFactorial(n-1)
}

console.log(getFactorial(4));

Problem 18: Find All Prime Numbers in an Array
Ans: // Helper function to check if a number is prime
const isPrime = (n) => {
    if (n <= 1) return false;   // 1 and below are not prime

    for (let i = 2; i <= Math.sqrt(n); i++) {
        if (n % i === 0) return false; // divisible by i → not prime
    }
    return true;
}

// Main function to filter prime numbers
const findPrimes = (arr) => {
    return arr.filter(num => isPrime(num));
}

// Test cases
console.log(findPrimes([1, 2, 3, 4, 5, 6, 7]));  // [2, 3, 5, 7]
console.log(findPrimes([10, 11, 12, 13, 14, 15])); // [11, 13]

Problem 19: Sum of Squares of Even Numbers
Ans: const SumOfSquares = (arr) => {        
return arr
        .filter((num)=>num % 2===0)
        .map((num)=> num ** 2)
        .reduce((acc,val)=>acc+val,0)
    
}

console.log(SumOfSquares([1, 2, 3, 4, 5]));

Problem 20: Check if a String is a Palindrome
Ans: const isPalindrom = (str) => {
    return str.split("").reverse().join("") === str;
}

console.log(isPalindrom("racecar"))

Problem 21: Most Frequent Number in an Array
Ans: 